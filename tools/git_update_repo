#!/usr/bin/env bash

# skip non-git-repo dirs
if [ ! -d "$1/.git" ]; then
  exit
fi

cd $1

# update any integration branches that exist in the repo
for branch in main master develop; do

  # skip branches that are not present
  if [ ! $(git rev-parse --verify "$branch" 2>/dev/null) ]; then
    continue
  fi

  # pull if on the branch, brackground-fetch otherwise
  if [ $(git rev-parse --abbrev-ref HEAD) == "$branch" ]; then
    echo "pulling $(basename $PWD)/$branch"
    git pull --prune
  else
    echo "fetching $(basename $PWD)/$branch"
    git fetch --prune origin "$branch:$branch"
  fi

  # remove tracking branches that have been deleted upstream
  # source: https://stackoverflow.com/a/33548037
  git fetch -p && for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do git branch -D $branch; done
done
